#!/usr/bin/env python
# -*- coding: utf-8 -*-
# dans le répertoire mon_projetRest lancer : python app/restPostGet.py
# Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)

from math import *
import numpy as np
import json
from flask import Flask, jsonify, request,abort,render_template
from flask_socketio import SocketIO, emit


# Ciel mes abaques....!;--) Dédicace pour l'inquiétude de Clara
##################################################################################################
dict_CoeffPente = {"Key1":(4,7,1),"Key2":(5,9,0.99),"Key3":(6,11,0.98),"Key4":(7,12,0.98),"Key5":(8,14,0.97),"Key6":(9,16,0.96),"Key6":(10,18,0.95),
        "Key7":(11,19,0.94),"Key8":(12,21,0.93),"Key9":(13,23,0.92),"Key10":(14,25,0.91),"Key11":(15,27,0.9),"Key12":(16,29,0.89),
        "Key13":(17,31,0.87),"Key14":(18,32,0.85),"Key15":(19,34,0.83),"Key16":(20,36,0.81),"Key17":(21,38,0.78),"Key18":(22,40,0.76),
        "Key19":(23,42,0.73),"Key20":(24,45,0.71),"Key21":(25,47,0.68),"Key22":(26,49,0.65),"Key23":(27,51,0.64),"Key24":(28,53,0.61),
        "Key25":(29,55,0.59),"Key26":(30,58,0.56)}
        
####################################################################################################
        
dict_CoeffEntrai={"Key1":(0,0,0,0,180,1650),"Key2":(0,0,0,0,190,1598),"Key3":(0,0,0,0,200,150),
                  "Key4":(0,0,0,0,210,1490),"Key5":(0,0,0,0,220,1810),"Key6":(0,0,0,0,230,1430),
                  "Key7":(0,0,1,0,180,2100),"Key8":(0,0,1,0,190,2014),"Key9":(0,0,1,0,200,1940),
                  "Key10":(0,0,1,0,210,1870),"Key11":(0,0,1,0,220,1810),"Key12":(0,0,1,0,230,1750),
                  "Key13":(0,1,0,0,180,3160),"Key14":(0,1,0,0,190,3015),"Key15":(0,1,0,0,200,2890),
                  "Key16":(0,1,0,0,210,2780),"Key17":(0,1,0,0,220,2660),"Key18":(0,1,0,0,230,2570),
                  "Key19":(1,0,0,0,180,1650),"Key21":(1,0,0,0,190,1598),"Key22":(1,0,0,0,200,1550),
                  "Key23":(1,0,0,0,210,1490),"Key24":(1,0,0,0,220,1460),"Key25":(1,0,0,0,230,1430),
                  "Key26":(1,0,1,0,180,2100),"Key27":(1,0,1,0,190,2014),"Key28":(1,0,1,0,200,1940),
                  "Key29":(1,0,1,0,210,1870),"Key30":(1,0,1,0,220,1810),"Key31":(1,0,1,0,230,1750),
                  "Key32":(1,1,0,0,180,2480),"Key33":(1,1,0,0,190,2378),"Key34":(1,1,0,0,200,2290),
                  "Key35":(1,1,0,0,210,2210),"Key36":(1,1,0,0,220,2130),"Key37":(1,1,0,0,230,2050),
                  "Key38":(2,0,0,0,180,1520),"Key39":(2,0,0,0,190,1468),"Key40":(2,0,0,0,200,1430),
                  "Key41":(2,0,0,0,210,1390),"Key42":(2,0,0,0,220,1350),"Key43":(2,0,0,0,230,1330),
                  "Key44":(2,0,1,0,180,1830),"Key45":(2,0,1,0,190,1767),"Key46":(2,0,1,0,200,1700),
                  "Key47":(2,0,1,0,210,1650),"Key48":(2,0,1,0,220,1600),"Key49":(2,0,1,0,230,1560),
                  "Key50":(2,1,0,0,180,3160),"Key51":(2,1,0,0,190,3015),"Key52":(2,1,0,0,200,2890),
                  "Key53":(2,1,0,0,210,2780),"Key54":(2,1,0,0,220,2660),"Key55":(2,1,0,0,230,2570),
                  "Key56":(3,0,0,0,180,1520),"Key57":(3,0,0,0,190,1468),"Key58":(3,0,0,0,200,1430),
                  "Key59":(3,0,0,0,210,1390),"Key60":(3,0,0,0,220,1350),"Key61":(3,0,0,0,230,1330),
                  "Key62":(3,0,1,0,180,1650),"Key63":(3,0,1,0,190,1598),"Key64":(3,0,1,0,200,1550),
                  "Key65":(3,0,1,0,210,1490),"Key66":(3,0,1,0,220,1460),"Key67":(3,0,1,0,230,1430),
                  "Key68":(3,1,0,0,180,1830),"Key69":(3,1,0,0,190,1767),"Key70":(3,1,0,0,200,1700),
                  "Key71":(3,1,0,0,210,1650),"Key72":(3,1,0,0,220,1600),"Key73":(3,1,0,0,230,1560),
                  "Key74":(3,1,1,0,180,2480),"Key75":(3,1,1,0,190,2378),"Key76":(3,1,1,0,200,2290),
                  "Key77":(3,1,1,0,210,2210),"Key78":(3,1,1,0,220,2130),"Key79":(3,1,1,0,230,2050),
                  "Key80":(0,0,0,1,180,1500),"Key81":(0,0,0,1,190,1460),"Key82":(0,0,0,1,200,1420),
                  "Key83":(0,0,0,1,210,1380),"Key84":(0,0,0,1,220,1350),"Key85":(0,0,0,1,230,1330),
                  "Key86":(0,0,1,1,180,1840),"Key87":(0,0,1,1,190,1780),"Key88":(0,0,1,1,200,1720),
                  "Key89":(0,0,1,1,210,1670),"Key90":(0,0,1,1,220,1620),"Key91":(0,0,1,1,230,1580),
                  "Key92":(0,1,0,1,180,2660),"Key93":(0,1,0,1,190,2550),"Key93":(0,1,0,1,200,2450),
                  "Key95":(0,1,0,1,210,2370),"Key96":(0,1,0,1,220,2280),"Key97":(0,1,0,1,230,2210),
                  "Key98":(1,0,0,1,180,1500),"Key99":(1,0,0,1,190,1460),"Key100":(1,0,0,1,200,1420),
                  "Key101":(1,0,0,1,210,1380),"Key102":(1,0,0,1,220,1350),"Key103":(1,0,0,1,230,1330),
                  "Key104":(1,0,1,1,180,1840),"Key105":(1,0,1,1,190,1780),"Key106":(1,0,1,1,200,1720),
                  "Key107":(1,0,1,1,210,1670),"Key108":(1,0,1,1,220,1620),"Key109":(1,0,1,1,230,1580),
                  "Key110":(1,1,0,1,180,2140),"Key111":(1,1,0,1,190,2060),"Key112":(1,1,0,1,200,1990),
                  "Key113":(1,1,0,1,210,1930),"Key114":(1,1,0,1,220,1870),"Key115":(1,1,0,1,230,1810),
                  "Key116":(1,1,1,1,180,3710),"Key117":(1,1,1,1,190,3540),"Key118":(1,1,1,1,200,3400),
                  "Key119":(1,1,1,1,210,3260),"Key120":(1,1,1,1,220,3140),"Key121":(1,1,1,1,230,3030),
                  "Key122":(2,0,0,1,180,1400),"Key123":(2,0,0,1,190,1360),"Key124":(2,0,0,1,200,1330),
                  "Key125":(2,0,0,1,210,1300),"Key126":(2,0,0,1,220,1270),"Key127":(2,0,0,1,230,1250),
                  "Key128":(2,0,1,1,180,1640),"Key129":(2,0,1,1,190,1590),"Key130":(2,0,1,1,200,1540),
                  "Key131":(2,0,1,1,210,1500),"Key132":(2,0,1,1,220,1460),"Key133":(2,0,1,1,230,1430),
                  "Key134":(2,1,0,1,180,2660),"Key135":(2,1,0,1,190,2550),"Key136":(2,1,0,1,200,2450),
                  "Key137":(2,1,0,1,210,2370),"Key138":(2,1,0,1,220,2280),"Key139":(2,1,0,1,230,2210),
                  "Key140":(2,1,1,1,180,6880),"Key141":(2,1,1,1,190,6550),"Key142":(2,1,1,1,200,6250),
                  "Key143":(2,1,1,1,210,5970),"Key144":(2,1,1,1,220,5730),"Key145":(2,1,1,1,230,5500),
                  "Key146":(3,0,0,1,180,1400),"Key147":(3,0,0,1,190,1360),"Key148":(3,0,0,1,200,1330),
                  "Key149":(3,0,0,1,210,1300),"Key150":(3,0,0,1,220,1270),"Key151":(3,0,0,1,230,1250),
                  "Key152":(3,0,1,1,180,1500),"Key153":(3,0,1,1,190,1460),"Key154":(3,0,1,1,200,1420),
                  "Key155":(3,0,1,1,210,1380),"Key156":(3,0,1,1,220,1350),"Key157":(3,0,1,1,230,1330),
                  "Key158":(3,1,0,1,180,1640),"Key159":(3,1,0,1,190,1590),"Key160":(3,1,0,1,200,1540),
                  "Key161":(3,1,0,1,210,1500),"Key162":(3,1,0,1,220,1460),"Key163":(3,1,0,1,230,1430),
                  "Key164":(3,1,1,1,180,2140),"Key165":(3,1,1,1,190,2060),"Key166":(3,1,1,1,200,1990),
                  "Key167":(3,1,1,1,210,1930),"Key168":(3,1,1,1,220,1870),"Key169":(3,1,1,1,230,1810)}

########################################################################################################

DebitTheorique={"Key1":(300,0,0,10,5),"Key2":(300,0,0,20,10),"Key3":(300,1,15,10,16),"Key4":(300,1,15,20,20),
                     "Key5":(300,1,20,10,18),"Key6":(300,1,20,20,23),"Key5":(350,0,0,10,7),"Key8":(350,0,0,20,15),
                     "Key9":(350,1,15,10,23),"Key10":(350,1,15,20,30),"Key11":(350,1,20,10,27),"Key12":(350,1,20,20,32),
                     "Key13":(400,0,0,10,10),"Key14":(400,0,0,20,20),"Key15":(400,1,15,10,31),"Key16":(400,1,15,20,40),
                     "Key17":(400,1,20,10,37),"Key18":(400,1,20,20,46),"Key19":(400,2,20,10,30),"Key20":(400,2,20,20,40),
                     "Key21":(400,2,25,10,35),"Key22":(400,2,25,20,44),"Key23":(400,2,30,10,39),"Key24":(400,2,30,20,48),
                     "Key25":(400,2,35,10,42),"Key26":(400,2,35,20,51),"Key27":(400,2,45,10,48),"Key28":(400,2,45,20,55),
                     "Key29":(500,0,0,10,17),"Key30":(500,0,0,20,34),"Key31":(500,1,15,10,52),"Key32":(500,1,15,20,67),
                     "Key33":(500,1,20,10,61),"Key34":(500,1,20,20,76),"Key35":(500,2,20,10,52),"Key36":(500,2,20,20,68),
                     "Key37":(500,2,25,10,59),"Key38":(500,2,25,20,75),"Key39":(500,2,30,10,66),"Key40":(500,2,30,20,81),
                     "Key41":(500,2,35,10,72),"Key42":(500,2,35,20,86),"Key43":(500,2,45,10,81),"Key44":(500,2,45,20,94),
                     "Key45":(600,0,0,10,25),"Key46":(600,0,0,20,50),"Key47":(600,1,15,10,77),"Key48":(600,1,15,20,101),
                     "Key49":(600,1,20,10,85),"Key50":(600,1,20,20,106),"Key51":(600,2,20,10,79),"Key52":(600,2,20,20,103),
                     "Key53":(600,2,25,10,91),"Key54":(600,2,25,20,113),"Key55":(600,2,30,10,101),"Key56":(600,2,30,20,123),
                     "Key57":(600,2,35,10,110),"Key58":(600,2,35,20,131),"Key59":(600,2,45,10,124),"Key60":(600,2,45,20,142),
                     "Key61":(650,0,0,10,30),"Key62":(650,0,0,20,60),"Key63":(650,1,15,10,92),"Key64":(650,1,15,20,120),
                     "Key65":(650,1,20,10,109),"Key66":(650,1,20,20,136),"Key67":(650,2,20,10,79),"Key68":(650,1,20,20,103),
                     "Key69":(650,2,25,10,91),"Key70":(650,2,25,20,113),"Key71":(650,2,30,10,101),"Key72":(650,2,30,20,123),
                     "Key73":(650,2,35,10,110),"Key74":(650,2,35,20,131),"Key75":(650,2,45,10,124),"Key76":(650,2,45,20,142),
                     "Key77":(700,0,0,10,35),"Key78":(700,0,0,20,70),"Key79":(700,1,15,10,109),"Key80":(700,1,15,20,141),
                     "Key81":(700,1,20,10,140),"Key82":(700,1,20,20,174),"Key83":(700,2,20,10,112),"Key84":(700,2,20,20,145),
                     "Key85":(700,2,25,10,128),"Key86":(700,2,25,20,160),"Key87":(700,2,30,10,143),"Key88":(700,2,30,20,173),
                     "Key89":(700,2,35,10,156),"Key90":(700,2,35,20,185),"Key91":(700,2,45,10,175),"Key92":(700,2,45,20,201),
                     "Key93":(800,0,0,10,47),"Key94":(800,0,0,20,94),"Key95":(800,1,15,10,145),"Key96":(800,1,15,20,189),
                     "Key97":(800,1,20,10,171),"Key98":(800,1,20,20,213),"Key99":(800,2,20,10,151),"Key100":(800,2,20,20,195),
                     "Key101":(800,2,25,10,172),"Key102":(800,2,25,20,215),"Key103":(800,2,30,10,192),"Key104":(800,2,30,20,233),
                     "Key105":(800,2,35,10,209),"Key106":(800,2,35,20,248),"Key107":(800,2,45,10,235),"Key108":(800,2,45,20,269),
                     "Key109":(900,0,0,10,60),"Key110":(900,0,0,20,121),"Key111":(900,1,15,10,186),"Key112":(900,1,15,20,243),
                     "Key113":(900,1,20,10,221),"Key114":(900,1,20,20,278),"Key115":(900,2,20,10,195),"Key116":(900,2,20,20,251),
                     "Key117":(900,2,25,10,223),"Key118":(900,2,25,20,278),"Key119":(900,2,30,10,249),"Key120":(900,2,30,20,301),
                     "Key121":(900,2,35,10,271),"Key122":(900,2,35,20,320),"Key123":(900,2,45,10,304),"Key124":(900,2,45,20,347),
                     "Key125":(1000,0,0,10,76),"Key126":(1000,0,0,20,151),"Key127":(100,1,15,10,233),"Key128":(1000,1,15,20,233),
                     "Key129":(1000,1,20,10,276),"Key130":(1000,1,20,20,343),"Key131":(1000,2,20,10,245),"Key132":(1000,2,20,20,315),
                     "Key133":(1000,2,25,10,280),"Key134":(1000,2,25,20,348),"Key135":(1000,2,30,10,312),"Key136":(1000,2,10,20,377),
                     "Key137":(1000,2,35,10,340),"Key138":(1000,2,35,20,401),"Key139":(1000,2,45,10,382),"Key140":(1000,2,45,20,435),
                     "Key141":(1200,1,20,10,405),"Key142":(1200,1,20,20,503),"Key143":(1200,2,20,10,361),"Key144":(1200,2,20,20,465),
                     "Key145":(1200,2,25,10,414),"Key146":(1200,2,25,20,514),"Key147":(1200,2,30,10,461),"Key148":(1200,2,30,20,556),
                     "Key149":(1200,2,35,10,502),"Key150":(1200,2,35,20,592),"Key151":(1200,2,45,10,563),"Key152":(1200,2,45,20,641),
                     "Key153":(1400,1,20,10,559),"Key154":(1400,1,20,20,694),"Key155":(1400,2,20,10,501),"Key156":(1400,2,20,20,644),
                     "Key157":(1400,2,25,10,574),"Key158":(1400,2,25,20,711),"Key159":(1400,2,30,10,639),"Key160":(1400,2,30,20,770),
                     "Key161":(1400,2,35,10,695),"Key162":(1400,2,35,20,820),"Key163":(1400,2,45,10,780),"Key164":(1400,2,45,20,887),
                     "Key165":(1600,1,20,10,738),"Key166":(1600,1,20,20,916),"Key167":(1600,2,20,10,663),"Key168":(1400,2,20,20,851),
                     "Key169":(1600,2,25,10,759),"Key170":(1600,2,25,20,941),"Key171":(1600,2,30,10,846),"Key172":(1600,2,30,20,1019),
                     "Key173":(1600,2,35,10,920),"Key174":(1600,2,35,20,1084),"Key175":(1600,2,45,10,1032),"Key176":(1600,2,45,20,1173),
                     "Key177":(1800,2,20,10,1054),"Key178":(1800,2,20,20,1088),"Key179":(1800,2,25,10,971),"Key180":(1800,2,25,20,1203),
                     "Key181":(1800,2,30,10,1081),"Key182":(1800,2,30,20,1302),"Key183":(1800,2,35,10,1177),"Key184":(1800,2,35,20,1385),
                     "Key185":(1800,2,45,10,1318),"Key186":(1800,2,45,20,1498),"Key187":(2000,2,20,10,1054),"Key188":(2000,2,20,20,1354),
                     "Key189":(1800,2,25,10,1208),"Key190":(2000,2,25,20,1496),"Key191":(2000,2,30,10,1346),"Key192":(2000,2,30,20,1620),
                     "Key193":(2000,2,35,10,1464),"Key194":(200,2,35,20,1723),"Key195":(2000,2,45,10,1640),"Key196":(2000,2,45,20,1863)}
# Fin des Abaques########################################################################################################################

#Démarrage Flask et WebSockets
app = Flask(__name__)
socketio = SocketIO(app)
###############################
calculs = [
    {
        'id_Calcul':122,
        'Largeur': 1,
        'Ent_Axe': 2,
        'Tension': 3,
        'Long_inc': 1,
        'aY': 4,
        'Vitesse': 5,
        'Debit': 1,
        'Densite': 6,
        'Capacite': 7,
        'C_star': 1,
        'Coeff_ent': 8,
        'Granulo': 9,
        'Ang_Auge': 1,
        'Ang_talutage': 10,
        'Diametre': 11,
        'Enroulement': 1,
        'Revetement':12,
        'Etat_surf': 13,
        'Coeff_pente': 1,
        'Puissance_inst': 14,
        'Resultat_Debit_Theorique':145,
        'Resultat_Puissance_Utile':145,
        'Resultat_Tension_Service':145,
        'done': False
    },
    {
        'id_Calcul': 123,
        'Largeur': 20,
        'Ent_Axe': 2,
        'Tension': 3,
        'Long_inc': 20,
        'aY': 4,
        'Vitesse': 5,
        'Debit': 20,
        'Densite': 6,
        'Capacite': 7,
        'C_star': 20,
        'Coeff_ent': 8,
        'Granulo': 9,
        'Ang_Auge': 20,
        'Ang_talutage': 10,
        'Diametre': 11,
        'Enroulement': 20,
        'Revetement':12,
        'Etat_surf': 13,
        'Coeff_pente':20,
        'Puissance_inst': 14,
        'Resultat_Debit_Theorique':245,
        'Resultat_Puissance_Utile':245,
        'Resultat_Tension_Service':245,
        'done': False
    },
]


@app.route('/')
def index():
    return render_template('index.html')
    

def create_calcul(largeur,ent_axe,angle):
    
    calcul = {
        'id_Calcul': calculs[-1]['id_Calcul'] + 1,
        'Largeur': largeur,
        'Ent_Axe': ent_axe,
        'aY':angle,
        'done': False
    }
    # enregistrement des résultats dans 'calculs' puis retour des valeurs par le service
    calcul["Resultat_Debit_Theorique"]=largeur*ent_axe
    calcul["Resultat_Puissance_Utile"]=largeur*angle
    calcul["Resultat_Tension_Service"]=ent_axe*angle
    calculs.append(calcul)
    return calcul
    
#########################################################################
### Les Sockets...###
#########################################################################
@socketio.on('connexion')
def on_connect(message):
    print message['data']
    
@socketio.on('value changed')
def value_changed(message):
    ##print message['who']+" : "+message['data']
    print type(message)
    print message
    ## Si envoie automatique des valeurs du formulaire.
    ## Le traitement au niveau serveur est + lourd car il faut 
    ## récupérer des json dans un tableau : message[0]["value"] par exemple
    #print message[0]['value']
    # Si le Json est forger au départ sous la forme -> {Largeur:12,EntAxe:14,Angle:45}
    # on peut traiter plus clairement...
    print message["Largeur"]
    print message["EntAxe"]
    print message["Angle"]
    ########## Valeurs récupérées de la form pour le calcul
    results = create_calcul(message["Largeur"],message["EntAxe"],message["Angle"])
    print ("Résultats : ")
    print results["Resultat_Debit_Theorique"]
    print results["Resultat_Puissance_Utile"]
    print results["Resultat_Tension_Service"]
    print ("-------------------------------")
    for calcul in calculs:
        ##print calcul.get("id_Calcul")
        print calcul['id_Calcul']
    print("--------------------------------")
    #emit('update value', message, broadcast=True)
    emit('update value',results, broadcast=True)
    ########## Génération d'un calcul de test...
    results = create_calcul(10,10,25)
    print ("Résultats : ")
    print results["Resultat_Debit_Theorique"]
    print results["Resultat_Puissance_Utile"]
    print results["Resultat_Tension_Service"]
    print ("-------------------------------")
    for calcul in calculs:
        print calcul['id_Calcul']
    print("--------------------------------")
    #emit('update value', message, broadcast=True)
    #emit('update value',results, broadcast=True)
    
#########################################################################
    
if __name__ == '__main__':
    socketio.run(app, host='0.0.0.0')
